{
    "global.appName": "Pulse",
    "global.yes": "Yes",
    "global.no": "No",
    "global.none": "None",
    "global.token": "Token",
    "global.balance": "Balance",
    "global.comments": "Comments",
    "global.poolToken": "Liquidity Provider Token",

    "global.action.cancel": "Cancel",
    "global.action.close": "Close",
    "global.action.submit": "Submit",
    "global.actions.createMarket": "Create Market",

    "global.link.refFinance": "Ref Finance",
    "global.link.rainbowBridge": "Rainbow bridge",

    "pages.marketOverview": "Trade",
    "pages.resoluteOverview": "Finalized",
    "pages.pendingOverview": "Pending",
    "pages.profileStatus": "Balances",
    "pages.profileTransactions": "Transactions",
    "pages.profileParticipated": "Participated Markets",

    "market.outcomes.yes": "YES",
    "market.outcomes.no": "NO",
    "market.outcomes.long": "LONG",
    "market.outcomes.short": "SHORT",

    "menu.logout": "Logout",
    "menu.profile": "Profile",
    "menu.positions": "Positions",
    "menu.wrapNear": "Wrap NEAR",
    "menu.balance": ":amount :tokenSymbol",

    "home.title.head": ":appName - Markets",
    "home.title.welcome.loggedIn": "Welcome :username!",
    "home.title.subtitle.loggedIn": "See what markets are trending on Pulse ðŸ¤«",
    "home.title.welcome.loggedOut": "i know the future ðŸ¤«",
    "home.title.subtitle.loggedOut": "Pulse is a fair launch open-source app for prediction markets",

    "home.title.summary.pnl": "Unrealized PnL",
    "home.title.summary.totalSpent": "Total spent",
    "home.title.summary.totalBalance": "Total outcome tokens",

    "disclaimer.title": "Disclaimer",
    "disclaimer.description": "This is a community deployed open-source version of Pulse Protocol and is unaudited. You are acknowledging this software is provided as is with no warranty or guarantee.",
    "disclaimer.action.accept": "Accept",

    "wrapNearDialog.title": "Wrap NEAR",
    "wrapNearDialog.description": "Wrapping NEAR allows you to trade on Pulse. Make sure to leave 1 NEAR for gas fees to unwrap your NEAR.",
    "wrapNearDialog.errors.amountIn.exactBalance": "Please leave some balance for transaction fees",
    "wrapNearDialog.errors.amountIn.notEnoughBalance": "Not enough balance",
    "wrapNearDialog.requiredDeposit.description": "A small deposit of :amount NEAR is required in order to swap NEAR for wNEAR due to storage costs.",
    "wrapNearDialog.requiredDeposit.submit": "Deposit :amount NEAR",

    "noWrappedNear.description": "Looks like you don't have any wNEAR. You can swap your NEAR with wNEAR by going to :accountId âž” Wrap NEAR",
    "noWrappedNear.action.openDialog": "Take me there",
    "noBalanceCard.description": "Looks like you don't have any :tokenName. This market requires :tokenName in order to trade.",
    "noBalanceCard.action.openDialog": "Get :tokenName",

    "noBalanceDialog.title": "No :tokenName balance",
    "noBalanceDialog.description": "Looks like you have no :tokenName balance. You can get some :tokenName at the following places:",

    "redeem.description": "If you have shares in every outcome, you can redeem them for collateral. You are eligible for :amount :tokenSymbol",
    "redeem.action.submit": "Redeem",
    "redeem.overview.escrowValid": "Claimable if market is valid",
    "redeem.overview.escrowInvalid": "Claimable if market is invalid",
    "redeem.overview.paidNow": "Paid Now",

    "marketStatus.uknown": "Unknown",
    "marketStatus.finalized": "Finalized",
    "marketStatus.invalid": "Invalid",
    "marketStatus.resoluting": "Resoluting",
    "marketStatus.ongoing": "Ongoing",

    "market.title.head": ":appName - :description",
    "market.extraInfo": "Extra Info",
    "market.startDate": "Market started",
    "market.resolutionDate": "Resolution date",
    "market.closeDate": "Market close",
    "market.action.confirmSwap": "Confirm Swap",
    "market.action.confirmLiquidity": "Add Liquidity",
    "market.action.switchTokens": "Switch Tokens",
    "market.action.changeTradingPair": "Change Outcome Token",
    "market.action.claimEarnings": "Claim",

    "market.label.estimate": "Estimate",
    "market.label.resolutionInfo": "Resolution Info",
    "market.label.totalVolume": "Total Volume",
    "market.label.totalVolumeInUSD": "Volume (in USD)",
    "market.label.totalLiquidity": "Liquidity",
    "market.label.totalLiquidityInUSD": "Liquidity (in USD)",
    "market.label.scalarRange": "Range",
    "market.label.currentEstimate": "Current Estimate",
    "market.label.opinion": "What does the market think?",
    "market.label.youPay": "You pay",
    "market.label.youReceive": "You receive",
    "market.label.overview": "Overview",
    "market.label.redeem": "Redeem",
    "market.label.swap": "Swap",
    "market.label.liquidity": "Add Liquidity",
    "market.label.claimEarnings": "Claim",
    "market.label.seedPool": "Add Liquidity",
    "market.label.marketClosed": "Market Closed",
    "market.label.exitPool": "Remove Liquidity",
    "market.label.notLoggedIn": "Not Logged In",
    "market.label.spaceTokens": " tokens",
    "market.label.notInWhitelist": "Not in whitelist",
    "market.label.lp": "LP",
    "market.label.relativePoolShare": "% Pool Tokens",

    "notInWhitelist.title": "Not open for public",
    "notInWhitelist.description": "Your account has not been whitelisted. Please reach out in order to join the closed BETA",

    "market.claimEarnings.validMarket": "This market was resoluted and marked as valid. You can claim your earnings below.",
    "market.claimEarnings.invalidMarket": "This market was marked as invalid, you can claim all your tokens back.",
    "market.claimEarnings.alreadyClaimed": "You've already claimed :payout :tokenName",
    "market.claimEarnings.label.outcome": "Outcome",
    "market.claimEarnings.label.balance": "Your Balance",
    "market.claimEarnings.label.payout": "Payout Per Share",
    "market.claimEarnings.label.claimable": "Claimable (including earned fees through liquidity providing, shares left in LP pool and :tokenName hold in escrow):",

    "market.overview.rate": "Rate",
    "market.overview.inverseRate": "Inverse Rate",
    "market.overview.estimatedFee": "Estimated Fee",
    "market.overview.maxSlippage": "Max. Slippage",
    "market.overview.maxPayout": "Max. Payout",
    "market.overview.escrowValid": "Claimable if market is valid",
    "market.overview.escrowInvalid": "Claimable if market is invalid",
    "market.overview.paidNow": "Paid Now",
    "market.overview.estimateMoreAfterTrade": "You are saying that it will be more than :amount",
    "market.overview.estimateLessAfterTrade": "You are saying that it will be less than :amount",

    "market.category.crypto": "Crypto",
    "market.category.esports": "Esports",
    "market.category.meme": "Memes",
    "market.category.politics": "Politics",
    "market.category.sports": "Sports",
    "market.category.startups": "Startups",
    "market.category.stocks": "Stocks",
    "market.category.viral": "Viral",
    "market.category.beer": "Beer",

    "notLoggedIn.title": "Welcome to Pulse!",
    "notLoggedIn.description": "To start trading on markets, you have to be logged in.",
    "notLoggedIn.action.login": "Login",

    "marketCreation.label.extraInfo": "Provide info to resolute the market",
    "marketCreation.label.categorySelect": "Select one or more category",
    "marketCreation.label.description": "Provide description of the market",
    "marketCreation.label.marketType": "Choose a market type",
    "marketCreation.label.binary": "Binary",
    "marketCreation.label.categorical": "Categorical",
    "marketCreation.label.scalar": "Scalar",
    "marketCreation.label.resolutionDate": "When can the market be resolved?",
    "marketCreation.label.helperText.resolutionDate": "Resolution date is in your time",
    "marketCreation.label.marketClose": "When should the market be closed for trading?",
    "marketCreation.label.helperText.marketClose": "Market close is in your time",
    "marketCreation.label.outcomes": "Outcomes",
    "marketCreation.label.outcome": "Outcome :number",
    "marketCreation.label.addMoreOutcomes": "Add more outcomes",
    "marketCreation.label.collateralToken": "Collateral token",
    "marketCreation.label.scalarUpperBound": "Upper bound",
    "marketCreation.label.scalarLowerBound": "Lower bound",
    "marketCreation.label.oracleBond": "Creating this market will cost :amount :tokenName in order to be resolved",
    "marketCreation.errors.upperBoundLessThanLowerBound": "Upperbound should be higher than lowerbound",
    "marketCreation.errors.resolutionDateEarlierThanToday": "Resolution date cannot be in the past",
    "marketCreation.errors.closeDateEarlierThanToday": "Market close date cannot be in the past",
    "marketCreation.errors.closeDateLaterThanResolution": "Market close can't be later than resolution date",
    "marketCreation.errors.validityBond": "You do not have enough :tokenName in order to create this market. You need a minimum of :amount :tokenName",

    "marketClosed.description": "This market has ended. Resolution is currently in progress, come back later to claim your earnings.",

    "marketPeding.title.head": ":appName - Pending",
    "marketResolution.title.head": ":appName - Finalized",

    "liquidityProvider.description": "Liquidity providers earn a :percentage% fee on all trades proportional to their share of the pool. Fees are added to the pool, accrue in real time, and can be claimed by withdrawing your liquidity.",

    "orderHistory.title": "Order History",
    "orderHistory.table.share": "Share",
    "orderHistory.table.pricePerShare": "Price Per Share",
    "orderHistory.table.orderValue": "Order Value",

    "feesEarned.title": "Fees Earned",
    "feesEarned.table.market": "Market",
    "feesEarned.table.balance": "Pool Token Balance",
    "feesEarned.table.feesEarned": "Fees Earned",

    "seedScalarMarket.explanation": "Seed the pool with :tokenName, pick what the initial value is.",
    "seedScalarMarket.label.initialValue": "Set initial value",
    "seedScalarMarket.label.upperBound": "Upperbound: :amount",
    "seedScalarMarket.label.lowerBound": "Lowerbound: :amount",
    "seedScalarMarket.errors.initialValue.ltLowerBound": "Value shouldn't be less than lower bound",
    "seedScalarMarket.errors.initialValue.gtUpperBound": "Value shouldn't be greater than upper bound",
    "seedScalarMarket.action.submit": "Seed pool",

    "seedPool.wrongUser.title": "Only the creator of the market can seed the pool.",
    "seedPool.wrongUser.description": "Please come back later. If you are the creator, please login as :account to seed the pool.",
    "seedPool.explanation": "Seed the pool with :tokenName, pick how heavy each outcome is. Together it should be 100%.",
    "seedPool.not100Percent": "All the weight combined equal :percentage but should equal 100.",
    "seedPool.inputZero": "Outcome can't have a weight of zero or less.",
    "seedPool.input100": "Outcome can't have a weight of 100 or higher.",
    "seedPool.action.submit": "Add Liquidity",
    "seedPool.action.finalize": "Publish Pool",
    "seedPool.action.reSeed": "Reseed Pool",
    "seedPool.weightsTitle": "Outcome Weights",
    "seedPool.label.mainTokenBalance": "NEAR Input",
    "seedPool.errors.notEnoughBalance": "Not Enough Balance",

    "liquidityProvider.errors.notEnoughBalance": "Not Enough Balance",

    "priceHistory.labels.1d": "1D",
    "priceHistory.labels.1w": "1W",
    "priceHistory.labels.3w": "3W",
    "priceHistory.labels.1m": "1M",
    "priceHistory.labels.all": "ALL",

    "swap.errors.notEnoughBalance": "Not Enough Balance",
    "swap.errors.notEnoughLiquidity": "Not enough liquidity in the pool to make this trade happen.",

    "auth.login": "Login",

    "navigation.back": "Back",

    "exitPool.description": "Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.",
    "exitPool.label.lpTokensToRemove": "LP Tokens To Remove",
    "exitPool.label.youInsert": "You Insert",
    "exitPool.action.exitPool": "Remove Liquidity",
    "exitPool.label.feesEarned": "Fees Earned: :amount :tokenSymbol",
    "exitPool.validation.amountIn.tooHigh": "Amount can't exceed balance",
    "exitPool.validation.amountIn.negative": "Amount can't be zero or lower",

    "userbalances.title": "Balances",
    "userbalances.table.market": "Market",
    "userbalances.table.price": "Avg. Price",
    "userbalances.table.outcome": "Outcome",
    "userbalances.table.balance": "Balance",
    "userbalances.table.status": "Status",
    "userbalances.table.spent": "Spent",
    "userbalances.table.profit": "Profit",

    "transaction.tokenNames.ofEachShare": "of each outcome",

    "accountTransactionsOverview.title": "Transactions",
    "accountTransactionsOverview.redeem.type": "Redeem",
    "accountTransactionsOverview.claimEarnings.type": "Claim",
    "accountTransactionsOverview.addLiquidity.type": "Add Liquidity",
    "accountTransactionsOverview.removeLiquidity.type": "Remove Liquidity",
    "accountTransactionsOverview.removeLiquidity.feesEarned": "Fees earned",
    "accountTransactionsOverview.buy.type": "Buy",
    "accountTransactionsOverview.sell.type": "Sell",
    "accountTransactionsOverview.table.market": "Market",
    "accountTransactionsOverview.table.type": "Type",
    "accountTransactionsOverview.table.date": "Date",
    "accountTransactionsOverview.table.details": "Details",

    "participatedMarketsOverview.title": "Participated markets",
    "participatedMarketsOverview.table.description": "Market",
    "participatedMarketsOverview.table.date": "Date",
    "participatedMarketsOverview.table.status": "Status",

    "escrowStatus.title": "Validity Escrow",
    "escrowStatus.table.market": "market",
    "escrowStatus.table.amount": "amount",
    "escrowStatus.table.payoutState": "if market is",
    "escrowStatus.table.valid": "valid",
    "escrowStatus.table.invalid": "invalid",

    "marketResolutionInfo.text.oracle": "This market will be resolved by the Flux Oracle."
}
